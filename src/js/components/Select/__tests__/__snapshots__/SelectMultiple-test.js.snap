// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select Controlled deselect an option 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="one"
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select Controlled multiple 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7"
      style={
        Object {
          "minWidth": "auto",
        }
      }
    >
      <svg
        aria-label="FormDown"
        className="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select Controlled multiple onChange toggle with valueKey reduce 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="Value1"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange toggle with valueKey reduce 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c8 {
  background-color: #7D4CDB;
  color: #FFFFFF;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 c8"
        >
          <span
            class="c9"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c9"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c10"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange toggle with valueKey reduce 3`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled multiple onChange with valueKey reduce 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey reduce 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey reduce 3`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled multiple onChange with valueKey string 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey string 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey string 3`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 3`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey 4`] = `
<div
  class="StyledBox-sc-13pk1d4-0 glPSfV StyledDrop-sc-16s5rx8-0 kQAKuZ"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 bFwQzJ StyledSelect__StyledContainer-znp66n-0 evOFkc"
    id="test-select__select-drop"
  >
    <div
      class="SelectContainer__OptionsBox-sc-1wi0ul8-0 Knkxk"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="StyledButton-sc-323bzc-0 ynEro SelectContainer__SelectOption-sc-1wi0ul8-2 kkPGyb"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="StyledBox-sc-13pk1d4-0 lcXThF SelectContainer__OptionBox-sc-1wi0ul8-1 cjPAAw"
        >
          <span
            class="StyledText-sc-1sadyjn-0 bilRua"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="StyledButton-sc-323bzc-0 ynEro SelectContainer__SelectOption-sc-1wi0ul8-2 kkPGyb"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="StyledBox-sc-13pk1d4-0 lcXThF SelectContainer__OptionBox-sc-1wi0ul8-1 cjPAAw"
        >
          <span
            class="StyledText-sc-1sadyjn-0 bilRua"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 bokQlS"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 5`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled multiple values 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="multiple"
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select Controlled multiple values 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-sc-323bzc-0 jFJBys Select__StyledSelectDropButton-sc-17idtfo-1 ksCGpf"
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-13pk1d4-0 VvbUh"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 bVYLzf"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 ksQrmr"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-sc-1x30a0s-0 fVbmbP Select__SelectTextInput-sc-17idtfo-0 hWmVID"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="multiple"
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-13pk1d4-0 iCDnTm"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 kbXEEj"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select Controlled multiple values 3`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c9 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c8 {
  background-color: #7D4CDB;
  color: #FFFFFF;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 c8"
        >
          <span
            class="c9"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 c8"
        >
          <span
            class="c9"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c10"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple values 4`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled multiple with empty results 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple with empty results 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple with empty results 3`] = `
"@media only screen and (max-width: 768px) {
  .iCDnTm {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select Controlled select another option 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="two"
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select Controlled should not have accessibility violations 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            aria-label="test"
            autocomplete="off"
            class="c6 c7"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;
