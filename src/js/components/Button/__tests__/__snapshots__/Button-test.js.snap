// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button active + primary 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 18px;
  background-color: rgba(221,221,221,0.4);
  color: #000000;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Button
  </button>
</div>
`;

exports[`Button active 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: rgba(221,221,221,0.4);
  color: #000000;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Button
  </button>
</div>
`;

exports[`Button as 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <span
    className="c1"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  />
</div>
`;

exports[`Button basic 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Test
  </button>
</div>
`;

exports[`Button children function 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c2 {
  font-size: 18px;
  line-height: 24px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button children function with disabled prop 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c3:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c3:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus > circle,
.c3:focus > ellipse,
.c3:focus > line,
.c3:focus > path,
.c3:focus > polygon,
.c3:focus > polyline,
.c3:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus::-moz-focus-inner {
  border: 0;
}

.c2 {
  font-size: 18px;
  line-height: 24px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <span
      className="c2"
    >
      Disabled
    </span>
  </button>
  <button
    className="c3"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <span
      className="c2"
    >
      Test
    </span>
  </button>
</div>
`;

exports[`Button color 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #6FFFB0;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #6FFFB0;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #6FFFB0;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #6FFFB0;
  color: #444444;
  border-radius: 18px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c2:hover {
  box-shadow: 0px 0px 0px 2px #6FFFB0;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus > circle,
.c2:focus > ellipse,
.c2:focus > line,
.c2:focus > path,
.c2:focus > polygon,
.c2:focus > polyline,
.c2:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus::-moz-focus-inner {
  border: 0;
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #111111;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #111111;
  color: #f8f8f8;
  border-radius: 18px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c3:hover {
  box-shadow: 0px 0px 0px 2px #111111;
}

.c3:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus > circle,
.c3:focus > ellipse,
.c3:focus > line,
.c3:focus > path,
.c3:focus > polygon,
.c3:focus > polyline,
.c3:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus::-moz-focus-inner {
  border: 0;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #123;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #123;
  color: #f8f8f8;
  border-radius: 18px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #123;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Test
  </button>
  <button
    className="c2"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Test
  </button>
  <button
    className="c3"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Test
  </button>
  <button
    className="c4"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Test
  </button>
</div>
`;

exports[`Button disabled 1`] = `
.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 12px;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 18px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus > circle,
.c2:focus > ellipse,
.c2:focus > line,
.c2:focus > path,
.c2:focus > polygon,
.c2:focus > polyline,
.c2:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus::-moz-focus-inner {
  border: 0;
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c3:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus > circle,
.c3:focus > ellipse,
.c3:focus > line,
.c3:focus > path,
.c3:focus > polygon,
.c3:focus > polyline,
.c3:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus::-moz-focus-inner {
  border: 0;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
  line-height: 0;
  padding: 12px;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
  line-height: 0;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  />
  <button
    className="c2"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Button
  </button>
  <button
    className="c1"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Button
  </button>
  <button
    className="c3"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Button
  </button>
  <button
    className="c1"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Button
  </button>
  <button
    className="c4"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg />
  </button>
  <button
    className="c5"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg />
  </button>
  <button
    className="c6"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg />
  </button>
  <button
    className="c1"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c7"
    >
      <svg />
      <div
        className="c8"
      />
      Button
    </div>
  </button>
  <button
    className="c3"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c7"
    >
      <svg />
      <div
        className="c8"
      />
      Button
    </div>
  </button>
  <button
    className="c2"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c7"
    >
      <svg
        color="#f8f8f8"
      />
      <div
        className="c8"
      />
      Button
    </div>
  </button>
</div>
`;

exports[`Button fill 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  width: 100%;
  height: 100%;
  max-width: none;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c2:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus > circle,
.c2:focus > ellipse,
.c2:focus > line,
.c2:focus > path,
.c2:focus > polygon,
.c2:focus > polyline,
.c2:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus::-moz-focus-inner {
  border: 0;
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c3:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c3:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus > circle,
.c3:focus > ellipse,
.c3:focus > line,
.c3:focus > path,
.c3:focus > polygon,
.c3:focus > polyline,
.c3:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus::-moz-focus-inner {
  border: 0;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  width: 100%;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  height: 100%;
}

.c5:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <button
      className="c2"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    />
    <button
      className="c3"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    />
    <button
      className="c4"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    />
    <button
      className="c5"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    />
  </button>
</div>
`;

exports[`Button focus 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  class="c0"
>
  <button
    class="c1"
    type="button"
  >
    Test
  </button>
</div>
`;

exports[`Button hoverIndicator as object with color 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:hover {
  background-color: rgba(125,76,219,1);
  color: #FFFFFF;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid color 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:hover {
  background-color: invalid;
  color: #000000;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator background 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator color 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:hover {
  background-color: #777777;
  color: #FFFFFF;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button href 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <a
    className="c1"
    href="test"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  />
</div>
`;

exports[`Button icon label 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c3 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 12px;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <svg />
      <div
        className="c3"
      />
      Test
    </div>
  </button>
</div>
`;

exports[`Button primary 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 18px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Test
  </button>
</div>
`;

exports[`Button reverse icon label 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c3 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 12px;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      Test
      <div
        className="c3"
      />
      <svg />
    </div>
  </button>
</div>
`;

exports[`Button size 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #f8f8f8;
  stroke: #f8f8f8;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c11 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #666666;
  stroke: #666666;
}

.c11 g {
  fill: inherit;
  stroke: inherit;
}

.c11 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c11 *[stroke*="#"],
.c11 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c11 *[fill-rule],
.c11 *[FILL-RULE],
.c11 *[fill*="#"],
.c11 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c10 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 12px;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 20px;
  font-size: 14px;
  line-height: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c2:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus > circle,
.c2:focus > ellipse,
.c2:focus > line,
.c2:focus > path,
.c2:focus > polygon,
.c2:focus > polyline,
.c2:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus::-moz-focus-inner {
  border: 0;
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 24px;
  color: #444444;
  padding: 8px 32px;
  font-size: 22px;
  line-height: 28px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c3:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c3:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus > circle,
.c3:focus > ellipse,
.c3:focus > line,
.c3:focus > path,
.c3:focus > polygon,
.c3:focus > polyline,
.c3:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c3:focus::-moz-focus-inner {
  border: 0;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 20px;
  font-size: 14px;
  line-height: 20px;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 18px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 18px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 24px;
  color: #444444;
  padding: 8px 32px;
  font-size: 22px;
  line-height: 28px;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  background-color: #7D4CDB;
  color: #f8f8f8;
  border-radius: 18px;
  line-height: 0;
  padding: 12px;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  className="c0"
>
  <button
    className="c1"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Small
  </button>
  <button
    className="c2"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Medium
  </button>
  <button
    className="c2"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Default
  </button>
  <button
    className="c3"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Large
  </button>
  <button
    className="c4"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Small
  </button>
  <button
    className="c5"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Medium
  </button>
  <button
    className="c5"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Default
  </button>
  <button
    className="c6"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    Large
  </button>
  <button
    className="c7"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg
      aria-label="Add"
      className="c8"
      viewBox="0 0 24 24"
    >
      <path
        d="M12,22 L12,2 M2,12 L22,12"
        fill="none"
        stroke="#000"
        strokeWidth="2"
      />
    </svg>
  </button>
  <button
    className="c7"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg
      aria-label="Add"
      className="c8"
      viewBox="0 0 24 24"
    >
      <path
        d="M12,22 L12,2 M2,12 L22,12"
        fill="none"
        stroke="#000"
        strokeWidth="2"
      />
    </svg>
  </button>
  <button
    className="c7"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg
      aria-label="Add"
      className="c8"
      viewBox="0 0 24 24"
    >
      <path
        d="M12,22 L12,2 M2,12 L22,12"
        fill="none"
        stroke="#000"
        strokeWidth="2"
      />
    </svg>
  </button>
  <button
    className="c7"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <svg
      aria-label="Add"
      className="c8"
      viewBox="0 0 24 24"
    >
      <path
        d="M12,22 L12,2 M2,12 L22,12"
        fill="none"
        stroke="#000"
        strokeWidth="2"
      />
    </svg>
  </button>
  <button
    className="c1"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c9"
    >
      Small
      <div
        className="c10"
      />
      <svg
        aria-label="Next"
        className="c11"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="7 2 17 12 7 22"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </button>
  <button
    className="c2"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c9"
    >
      Medium
      <div
        className="c10"
      />
      <svg
        aria-label="Next"
        className="c11"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="7 2 17 12 7 22"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </button>
  <button
    className="c2"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c9"
    >
      Default
      <div
        className="c10"
      />
      <svg
        aria-label="Next"
        className="c11"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="7 2 17 12 7 22"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </button>
  <button
    className="c3"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    type="button"
  >
    <div
      className="c9"
    >
      Large
      <div
        className="c10"
      />
      <svg
        aria-label="Next"
        className="c11"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="7 2 17 12 7 22"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </button>
</div>
`;

exports[`Button tip 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #7D4CDB;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  class="c0"
>
  <button
    class="c1"
    type="button"
  >
    Default Tip
  </button>
</div>
`;

exports[`Button warns about invalid icon 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  line-height: 0;
  padding: 12px;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  class="c0"
>
  <button
    class="c1"
    type="button"
  >
    <svg />
  </button>
</div>
`;

exports[`Button warns about invalid label 1`] = `
.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  class="c0"
>
  <button
    class="c1"
    type="button"
  >
    Test
  </button>
</div>
`;
